% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/heat_tree.R
\name{heat_tree}
\alias{heat_tree}
\title{Draws and aligns decision tree and heatmap.}
\usage{
heat_tree(
  dat_raw,
  class_lab,
  class_cols = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00",
    "#CC79A7"),
  label_map = NULL,
  panel_space = 0.001,
  lev_fac = 1.3,
  heat_rel_height = 0.2,
  clust_samps = TRUE,
  clust_class = TRUE,
  custom_layout = NULL,
  p_thres = 0.05,
  show_all_feats = FALSE,
  tree_space_top = 0.05,
  tree_space_bottom = 0.035,
  par_node_vars = list(label.size = 0, label.padding = ggplot2::unit(0.15, "lines"),
    line_list = list(ggplot2::aes(label = splitvar)), line_gpar = list(list(size = 9)),
    ids = "inner"),
  terminal_vars = list(label.padding = ggplot2::unit(0.25, "lines"), size = 3),
  edge_vars = list(color = "grey70", size = 0.5),
  edge_text_vars = list(color = "grey30", size = 3),
  feat_types = NULL,
  trans_type = "normalize",
  cont_cols = ggplot2::scale_fill_viridis_c(),
  cate_cols = ggplot2::scale_fill_viridis_d(option = "D", begin = 0.3, end = 0.9),
  clust_feats = TRUE,
  class_space = 0.03,
  class_pos = "top",
  class_lab_disp = class_lab
)
}
\arguments{
\item{dat_raw}{Tidy dataset.}

\item{class_lab}{Name of the column in dat_raw that contains class/label information.}

\item{class_cols}{Vector of RGBs for the class colors,
defaults to a colorblind friendly palette.}

\item{label_map}{Named vector of the meaning of the class values,
e.g., c(`0` = 'Edible', `1` = 'Poisonous').}

\item{panel_space}{Spacing between facets relative to viewport,
recommended to range from 0.001 to 0.01.}

\item{lev_fac}{Relative weight of child node positions
according to their levels, commonly ranges from 1 to 1.5.
1 for parent node perfectly in the middle of child nodes.}

\item{heat_rel_height}{Relative height of heatmap compared to whole figure (with tree).}

\item{clust_samps}{Logical. If TRUE, hierarhical clustering would be performed
among samples within each leaf node.}

\item{clust_class}{Logical. If TRUE, class/label would be included in hierarchical clustering
of samples within each leaf node and might yield a more interpretable heatmap.}

\item{custom_layout}{Dataframe with 3 columns: id, x and y
for manually input custom layout.}

\item{p_thres}{Numeric value indicating the p-value threshold of feature importance.
Feature with p-values computed from the decision tree below this value
will be displayed on the heatmap.}

\item{show_all_feats}{Logical. If TRUE, show all features from the dataset, regarless p_thres.}

\item{tree_space_top}{Numeric value to pass to expand for top margin of tree.}

\item{tree_space_bottom}{Numeric value to pass to expand for bottom margin of tree.}

\item{par_node_vars}{Named list containing arguments to be passed to the
`geom_node_label()` call for non-terminal nodes.}

\item{terminal_vars}{Named list containing arguments to be passed to the
`geom_node_label()` call for terminal nodes.}

\item{edge_vars}{Named list containing arguments to be passed to the
`geom_edge()` call for tree edges.}

\item{edge_text_vars}{Named list containing arguments to be passed to the
`geom_edge_label()` call for tree edge annotations.}

\item{feat_types}{Named vector indicating the type of each features,
e.g., c(sex = 'factor', age = 'numeric').
If feature types are not supplied, infer from column type.}

\item{trans_type}{Character string specifying transformation type,
can be 'scale' or 'normalize'.}

\item{cont_cols}{Function determine color scale for continuous variable,
defaults to viridis option D.}

\item{cate_cols}{Function determine color scale for nominal categorical variable,
defaults to viridis option D.}

\item{clust_feats}{Logical. If TRUE, performs cluster on the features.}

\item{class_space}{Numeric value indicating spacing between
the class label and the rest of the features}

\item{class_pos}{Character string specifying the position of the class label
on heatmap, can be 'top', 'bottom' or 'none'.}

\item{class_lab_disp}{Character string for displaying the label of class label
if it differs from class_lab.}
}
\value{
A gtable/grob object of the decision tree (top) and heatmap (bottom).
}
\description{
Draws and aligns decision tree and heatmap.
}
\examples{
heat_tree(iris, class_lab = 'Species')

}
